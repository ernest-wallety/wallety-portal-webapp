/* You can add global styles to this file, and also import other style files */

/* Importing Bootstrap SCSS file. */
@import "bootstrap/scss/bootstrap";
@import "@ng-select/ng-select/themes/default.theme.css";
@import "ngx-toastr/toastr";

@import "../node_modules/@syncfusion/ej2-base/styles/material.css";
@import "../node_modules/@syncfusion/ej2-angular-notifications/styles/material.css";
@import "../node_modules/@syncfusion/ej2-layouts/styles/material.css";

.form-check {
  display: block;
  min-height: 1.5rem;
  padding-left: 1.5em;
  margin-bottom: 0.125rem;

  .form-check-input {
    float: left;
    margin-left: -1.5em;
    width: 1em;
    height: 1em;
    margin-top: 0.25em;
    vertical-align: top;
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    border: 1px solid rgba(0, 0, 0, 0.25);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    -webkit-print-color-adjust: exact; // Keep this for print color adjustment
    print-color-adjust: exact; // Change this line

    &:active {
      filter: brightness(90%);
    }

    &:focus {
      border-color: #86b7fe;
      outline: 0;
      box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    &:checked {
      background-color: #0d6efd;
      border-color: #0d6efd;
    }

    &.checked[type="checkbox"] {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
    }

    &.checked[type="radio"] {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
    }

    &.indeterminate {
      background-color: #0d6efd;
      border-color: #0d6efd;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e");
    }

    &:disabled {
      pointer-events: none;
      filter: none;
      opacity: 0.5;
    }
  }

  .form-check-input[type="checkbox"] {
    border-radius: 0.25em;
  }
}

.form-check-input[disabled] ~ .form-check-label,
.form-check-input:disabled ~ .form-check-label {
  opacity: 0.5;
}

.form-switch {
  padding-left: 2.5em;
  .form-check-input {
    width: 2em;
    margin-left: -2.5em;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");
    background-position: left center;
    border-radius: 2em;
    transition: background-position 0.15s ease-in-out;

    &::focus {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2386b7fe'/%3e%3c/svg%3e");
    }

    &::checked {
      background-position: right center;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .form-check-input {
      transition: none;
    }
  }
}

.form-check-inline {
  display: inline-block;
  margin-right: 1rem;
}

.ng-select-container {
  max-height: 31px !important;
  min-height: 31px !important;
}

.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input {
  top: 50%;
  transform: translateY(-50%);
}

// ===================================
// Form Styling Classes
// ===================================
.pull-right {
  display: flex;
  justify-content: right;
  padding: 0px !important;
  margin: 0px !important;
}

.pull-left {
  display: flex;
  justify-content: left;
  padding: 0px !important;
}

.form-error {
  font-weight: bold;
  color: red;
}

a:link,
.list-table a:link {
  text-decoration: none;
}
