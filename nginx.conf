server {
  listen 3000;
  server_name localhost;

  # Serve static files for the frontend
  location / {
    root /usr/share/nginx/html;
    
    # Ensure the SSR entry point (index.html) is served if no static file matches
    try_files $uri $uri/ /index.html;  
  }

  # Reverse proxy to Angular SSR server
  location /server/ {
    # Update this to the correct SSR server port (if different)
    proxy_pass http://localhost:3000;
    
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
  }

  # Optionally, configure other headers or logging as needed for security, caching, etc.
  # For example, caching headers for static assets
  location ~* \.(?:css|js|map|jpg|jpeg|png|gif|svg|ico|woff2)$ {
    root /usr/share/nginx/html;
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
  }

   # Enable CORS if needed
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'X-Requested-With,Content-Type,Authorization' always;
}
